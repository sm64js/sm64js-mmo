on: 
  push:
    branches: 
      - main

name: Docker Publish

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      publish-server: ${{ steps.set-output.outputs.publish-server }}
      publish-client: ${{ steps.set-output.outputs.publish-client }}
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get install -y jq

      - name: Check Clone Depth
        env:
          COMMITS: ${{ toJSON(github.event.commits) }}
        run: |
          export FETCH_DEPTH=$(echo $COMMITS | jq length)

      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          fetch-depth: $FETCH_DEPTH

      - name: Check Git Diff
        id: set-output
        env:
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.event.after }}
        run: |
          if [[ $(git diff --name-only $BEFORE $AFTER server) ]]; then
            echo "::set-output name=publish-server::true"
          fi
          if [[ $(git diff --name-only $BEFORE $AFTER client) ]]; then
            echo "::set-output name=publish-client::true"
          fi

  publish-server:
    needs: prepare
    if: ${{ needs.prepare.outputs.publish-server }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Deploy to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: bash publish-server.sh

  publish-client:
    needs: prepare
    if: ${{ needs.prepare.outputs.publish-client }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Deploy to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: bash publish.sh

  publish:
    needs: [prepare, publish-server, publish-client]
    if: |
      (${{ needs.publish-server.result == 'success' }} || ${{ needs.publish-server.result == 'skipped' }}) &&
      (${{ needs.publish-client.result == 'success' }} || ${{ needs.publish-client.result == 'skipped' }}) &&
      (${{ needs.prepare.outputs.publish-server }} || ${{ needs.prepare.outputs.publish-client }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Deploy to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: bash publish.sh
