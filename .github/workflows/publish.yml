on: 
  push:
    branches: 
      - main

name: Docker Publish

jobs:
  publish-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true

      - name: Check Git Diff
        env:
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.event.after }}
        run: |
          if [[ $(git diff --name-only $BEFORE $AFTER server) ]]; then
            echo "Resume publishing server"
          else
            exit 1
          fi

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump event JSON
        env:
          EVENT_JSON_FILENAME: ${{ github.event_path }}
        run: cat "$EVENT_JSON_FILENAME"

      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       /home/runner/.cache/sccache
      #       target
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Setup cache
      #   run: |
      #     mkdir sccache
      #     sudo mount -o bind /home/runner/.cache/sccache sccache

      # - name: Deploy to Docker Hub
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #   run: bash publish-server.sh

  publish:
    if: always()
    needs: publish-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Deploy to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: bash publish.sh
